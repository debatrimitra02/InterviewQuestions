class Solution {
public:
    
    int calculateNoBraces(string s) 
   {
    int res = 0, n = s.size(), sign = 1;
    stack<int> nums;
    
    for (int i = 0; i < n; i++) 
    {
        if (isdigit(s[i])) 
        {
            int num = s[i] - '0';
            while (i + 1 < n && isdigit(s[i + 1])) 
            {
                num = num * 10 + s[i + 1]-'0';
                i++;
            }
            
            res += sign * num;
        }
        
        else if (s[i] == '+') 
        {
            sign = 1;
            nums.push(res);
            res = 0;
        }
        else if (s[i] == '-') 
        {
            sign = -1;
            if(s[i+1] == '-')
            {
                sign=1;
                i++;
            }
            nums.push(res);
            res = 0;
        }
        
        else if (s[i] == '*' || s[i] == '/') 
        {
            char op = s[i];
            int temp = 0;
            
            sign=1;
            
            while (i + 1 < n && s[i + 1] == ' ')
                i++;
            while (i + 1 < n && s[i + 1] == '-')
            {
                sign = -1*sign;
                i++;
            }
            while (i + 1 < n && isdigit(s[i + 1])) 
            {
                temp = temp * 10 + s[i + 1] - '0';
                i++;
            }
            temp = temp*sign;
            if (op == '*')
                res *= temp;
            else
                res /= temp;
        }
    }
    while (!nums.empty()) {
        res += nums.top();
        nums.pop();
    }
    return res;
}
    
    int calculate(string s) 
    {
        stack<string> S;
        
        for(int i=0; i<s.length(); i++)
        {
            while(i<s.length() && s[i]==' ')
                i++;
            
         if (isdigit(s[i])) 
        {
            int num = s[i] - '0';
	     
            while (i + 1 < n && isdigit(s[i + 1])) 
            {
                num = num * 10 + s[i + 1]-'0';
                i++;
            }
	
             S.push(to_string(num));
         }
            
            string ss;
            while(i<s.length() && s[i]==' ')
                i++;
            if(i<s.length() && !isdigit(s[i]) && s[i]!=')')
            {
                ss= ss+ s[i];
                S.push(ss);
            }
            if(s[i] == ')')
            {
                string str;
               
                while(!S.empty() && !(S.top() == "("))
                {
                    
                    str = S.top() + str;
                    S.pop();
                }
                int res=calculateNoBraces(str);
                
                if(S.top() == "(")
                {
                    S.pop();
                    S.push(to_string(res));
                }
                
            }
        }
        
        string str;
        
        while(!S.empty())
                {
                    str = S.top() + str;
                    S.pop();
                }
                int res=calculateNoBraces(str);
                
        
        return res;
        
    }
};