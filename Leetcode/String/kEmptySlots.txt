/******************************************************************************

                              Online C++ Compiler.
               Code, Compile, Run and Debug C++ program online.
Write your code in this editor and press "Run" button to compile and execute it.

*******************************************************************************/
/*
There is a garden with N slots. In each slot, there is a flower. The N flowers will bloom one by one in N days. 
In each day, there will be exactly one flower blooming and it will be in the status of blooming since then.
Given an array flowers consists of number from 1 to N. Each number in the array represents the place 
where the flower will open in that day.

For example, flowers[i] = x means that the unique flower that blooms at day i will be at position x, 
where i and x will be in the range from 1 to N.

Also given an integer k, you need to output in which day there exists two flowers in the status of blooming, 
and also the number of flowers between them is k and these flowers are not blooming.

If there isnâ€™t such day, output -1.  

*/
#include <iostream>
#include<vector>
#include<climits>


using namespace std;

int bloomingFlower(int k, vector<int> flowers)
{
    if(flowers.empty())
        return -1;
        
    if(k==0)
    {
        return 1;
    }
    
    int n = flowers.size();
    vector<int> days(n, 0);
    
    //map of which flower blooms on which day
    for(int i=0; i<flowers.size(); i++)
    {
        days[flowers[i]-1] = i;
    }
    int result = INT_MAX;
    int i=0; 
    int left=0;
    int right = k+1;
    while(i< n)
    {
        if(days[i] < days[left] || days[i] <= days[right])
        {
            if(i == right)
                result = min(result, max(days[left], days[right]));
            left = i;
            right = i+k+1;
        }
        i++;
    }
    if(result == INT_MAX)
        return -1;
        
    return  result+1;
   
}

int main()
{
    vector<int> flowers = {1, 5, 4, 2, 3}; //days[0,  3,  4,  2,  1]
    int k = 2;
    int res = bloomingFlower(k, flowers);
    cout<<res;
    
}
