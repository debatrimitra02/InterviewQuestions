/*  Input: [2,3,4], [[1,1,0,4],[2,2,1,9]], [1,2,1]
Output: 11
Explanation: 
The price of A is $2, and $3 for B, $4 for C. 
You may pay $4 for 1A and 1B, and $9 for 2A ,2B and 1C. 
You need to buy 1A ,2B and 1C, so you may pay $4 for 1A and 1B (special offer #1), and $3 for 1B, $4 for 1C. 
You cannot add more items, though only $9 for 2A ,2B and 1C.  */



class Solution {
public:
    bool isValidOffer(vector<int> specialOffer, vector<int>& needs )
    {
        for(int i=0; i<needs.size(); i++)
        {
            if(specialOffer[i] > needs[i])
                return false;
        }
        return true;
    }
    int shoppingOffers(vector<int>& price, vector<vector<int>>& special, vector<int>& needs) {
       
        int minPrice=0;
        for(int i=0; i<needs.size(); i++)
        {
            minPrice += (price[i] * needs[i]);
        }
        
        for(int i=0; i<special.size(); i++)
        {
            if(isValidOffer(special[i], needs))
            {
                vector<int> clone;
                for(int i=0; i<needs.size(); i++)
                {
                    clone.push_back(needs[i]);
                }
                int offerPrice = special[i].back();
                for(int j=0; j<needs.size(); j++)
                {
                    clone[j] = needs[j] - special[i][j];
                }
                int remainingPrice = shoppingOffers(price, special, clone);
                minPrice = min(minPrice, (offerPrice + remainingPrice ));
            }
        }
         return minPrice;
    }
   
};