class Solution {
public:
    int numDecodings(string s) {
        if(s.empty() || s.length()==0)
            return 0;
        
        int n= s.length();
        
        int dp[n+1];
        memset(dp,0,sizeof(dp));
        dp[0] =1;
        dp[1] = s[0] != '0' ? 1:0;
        for(int i=2; i<= n;i++)
        {
            // If the last digit is not 0, then last digit must add to
        // the number of words

        if (s[i-1] > '0')
            dp[i] = dp[i-1];
        
 
        // If second last digit is smaller than 2 and last digit is
        // smaller than 7, then last two digits form a valid character
        if (s[i-2] == '1' || (s[i-2] == '2' && s[i-1] < '7') )
            dp[i] += dp[i-2];
            
        }
        
        for(int i=0; i<=n; i++)
            cout<<dp[i]<<" ";
        
            
        return dp[n];
        
    }
};