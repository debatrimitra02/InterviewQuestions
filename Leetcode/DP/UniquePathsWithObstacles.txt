class Solution {
public:
    int uniquePathsWithObstacles(vector<vector<int>>& obstacleGrid) {
        
        int row = obstacleGrid.size();
        int column = obstacleGrid[0].size();
        
        int arr[row][column];
       memset(arr,0,sizeof(arr));
        
        if(obstacleGrid[0][0] == 0) //initializing top left if no obstacle is present
            arr[0][0] = 1;
        
        for(int i=1; i<row; i++)
        {
            if(obstacleGrid[i][0] == 0)
                arr[i][0] = arr[i-1][0];
        }
        
        for(int j=1; j<column; j++)
        {
            if(obstacleGrid[0][j] == 0)
                arr[0][j] = arr[0][j-1];
        }
        
        for(int i=1; i<row; i++)
        {
            for(int j=1; j<column;j++)
            {
                if(obstacleGrid[i][j] == 0)
                    arr[i][j] = (arr[i-1][j] + arr[i][j-1]);
            }
        }
        
        return arr[row-1][column-1];
        
    }
};