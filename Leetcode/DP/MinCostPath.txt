#include <iostream>
#include<algorithm>
#include<vector>


using namespace std;

int minCostPath(vector<vector<int> >maze)
{
    if(maze.empty())
        return 0;
    int m = maze.size();
    int n= maze[0].size();
    int arr[m][n];
    
        
    for(int i=0; i<m; i++)
    {
        for(int j=0; j<n; j++)
        {
            if(i==0 && j==0)
            {
                arr[i][j] = maze[i][j];
            }
            else
            {
                if(i == 0)
                {
                    arr[i][j] = (arr[i][j-1] + maze[i][j]);
                }
                else if( j == 0 )
                {
                    arr[i][j] = (arr[i-1][j] + maze[i][j]);
                }
                else
                {
                    arr[i][j] = min((arr[i-1][j-1]+maze[i][j]),min((arr[i-1][j]+maze[i][j]), (arr[i][j-1]+maze[i][j])));
                    
                }
                
            }
        }
    }
    return arr[m-1][n-1];
   
}

int main() {
	vector<vector<int> > maze = {{1,2,3}, {4,8,2}, {1,5,3}};
	int result = minCostPath(maze);
	cout<<result;

}
