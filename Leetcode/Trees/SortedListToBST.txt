/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    
    int countNodes(ListNode* head)
    {
        if(head==NULL)
            return 0;
        int count=0;
        ListNode* current = head;
        while(current!= NULL)
        {
            current=current->next;
            count++;
        }
        return count;
    }
    
    TreeNode* sortedListToBST(ListNode* head) {
        int n = countNodes(head);
        return linkedListToBSTUtil(&head, n);
    }
    
TreeNode* linkedListToBSTUtil(ListNode **head, int n)
{
    if (n <= 0)
        return NULL;
  
 
     TreeNode *leftChild = linkedListToBSTUtil(head,n/2);
 
    TreeNode *root = new TreeNode((*head)->val);
    root->left = leftChild;
    *head = (*head)->next;
    root->right = linkedListToBSTUtil(head, (n-n/2)-1);
     
    return root;
}

};