// An efficient approach based CPP program to
// find if there is a rectangle with 1 as
// corners.
#include <bits/stdc++.h>
using namespace std;

// Returns true if there is a rectangle with
// 1 as corners.
bool isRectangle(const vector<vector<int> >& grid)
{
	// finding row and column size
	int m = grid.size();
    if(m== 0)
        return 0;
        
    int n = grid[0].size();
        int ans = 0;
        for (int x = 0; x < m; x++) {
            for (int y = x + 1; y < m; y++) {
                int cnt = 0;
                for (int z = 0; z < n; z++) {
                    if (grid[x][z] == 1 && grid[y][z] == 1) 
		     {
                        cnt++;
                    }
                }
                if(cnt > 1)
                    return true;
            }
        }
        return false;
}

// Driver code
int main()
{
	vector<vector<int> > mat = { { 1, 0, 0, 1, 0 },
								{ 0, 0, 1, 0, 1 },
								{ 0, 0, 0, 1, 0 },
								{ 1, 0, 1, 0, 1 } };
	if (isRectangle(mat))
		cout << "Yes";
	else
		cout << "No";
}
