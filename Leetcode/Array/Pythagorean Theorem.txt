/******************************************************************************
/******************************************************************************

                              Online C++ Compiler.
               Code, Compile, Run and Debug C++ program online.
Write your code in this editor and press "Run" button to compile and execute it.

*******************************************************************************/

#include <iostream>
#include<vector>
#include<algorithm>

using namespace std;

vector<vector<int>> pythagoreanTheorem(vector<int>& nums)
{
    vector<vector<int>> out;
    if(nums.size()<3)
        return out;
        
    for(int i=0; i<nums.size(); i++)
    {
        nums[i]=nums[i]*nums[i];
    }
    sort(nums.begin(), nums.end());
    int n=nums.size()-1;
    for(int i=n; i>=2; i--)
    {
	while(nums[i]==nums[i-1] && i>0)
		i--;

        int l=0;
        int r=i-1;
        while(l<r)
        {
            if(nums[l] + nums[r] == nums[i])
            {
                vector<int> V;
                V.push_back(i);
                V.push_back(l);
                V.push_back(r);
                out.push_back(V);
                V.clear();
                while(nums[l]==nums[l+1] && l<r)
			        l++;

		while(nums[r]==nums[r-1] && l<r)
               		r--;
		
		l++;
		r--;
            }
            else if(nums[l] + nums[r] < nums[i])
                    l++;
                    
                else
                    r--;
        }
        
    }
    return out;
}
int main()
{
    vector<int> V;
    V.push_back(3);
    V.push_back(3);
    V.push_back(9);
    V.push_back(16);
    V.push_back(4);
    V.push_back(5);
    V.push_back(4);
    V.push_back(5);
    V.push_back(12);
    V.push_back(13);
    vector<vector<int>> out =pythagoreanTheorem(V);
    for(int i=0; i<out.size(); i++)
    {
        vector<int> nums = out[i];
        for(int j=0; j<3 ;j++)
        {
            cout<<V[nums[j]]<<",";
        }
        cout<<endl;
    }
}




