/*

Given an array S of n integers, find three integers in S such that the sum is closest to a given number, target. Return the sum of the three integers. You may assume that each input would have exactly one solution.

*/

class Solution {
    //Complexity:O(n^2)
public:
    int threeSumClosest(vector<int>& nums, int target)
    {
        if(nums.size() < 3) return 0;

        std::sort(nums.begin(), nums.end());

        int res = nums[0] + nums[1] + nums[2];
       if(res == target) return res;
       
        int i = 0;
        while(i < nums.size()-2)
        {
            int j = i+1, k = nums.size()-1;

            while(j < k)
            {
                int sum = nums[i] + nums[j] + nums[k];

                if(sum == target) return sum;

                if(abs(sum - target) < abs(res - target))
                    res = sum;

                if(sum > target) 
                    k--;
                else           
                    j++;
            }

            i++;
        }

        return res;
    }
};